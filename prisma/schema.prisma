generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  // 自增主键ID
  id             Int       @id @default(autoincrement())
  // 用户唯一标识UUID
  uuid           String    @unique
  // 用户邮箱
  email          String
  // 密码哈希，可选（用于邮箱密码登录）
  password       String?   @db.VarChar(255)
  // 创建时间，自动生成当前时间
  createdAt      DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  // 更新时间，自动更新
  updatedAt      DateTime  @updatedAt @map("updated_at") @db.Timestamptz(6)
  // 是否已删除标记
  isDeleted      Boolean   @default(false) @map("is_deleted")
  // 用户昵称，可选
  nickname       String?   @db.VarChar(255)
  // 用户头像URL，可选
  avatarUrl      String?   @map("avatar_url") @db.VarChar(255)
  // 用户区域/语言设置，可选
  locale         String?   @db.VarChar(50)
  // 登录类型，可选
  signinType     String?   @map("signin_type") @db.VarChar(50)
  // 登录IP地址，可选
  signinIp       String?   @map("signin_ip") @db.VarChar(255)
  // 登录提供商(如Google、Facebook等)，可选
  signinProvider String?   @map("signin_provider") @db.VarChar(50)
  // 第三方登录的OpenID，可选
  signinOpenid   String?   @map("signin_openid") @db.VarChar(255)
  // 密码重置token，可选
  resetToken     String?   @map("reset_token") @db.VarChar(255)
  // 密码重置token过期时间，可选
  resetTokenExpiresAt DateTime? @map("reset_token_expires_at") @db.Timestamptz(6)

  // 联合唯一索引：确保同一登录提供商下邮箱唯一
  @@unique([email, signinProvider])
  // 数据库表映射名称
  @@map("users")
}
